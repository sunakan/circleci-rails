.PHONY: build-and-push-image
build-and-push-image: ## CI用 Docker imageをビルド & Push
	$(eval IMAGE_REPO := ghcr.io/sunakan/circleci-rails-ci)
	$(eval IMAGE_TAG := $(shell git rev-list -1 HEAD -- Dockerfile))
	docker build . --tag "${IMAGE_REPO}:latest"
	docker tag "${IMAGE_REPO}:latest" "${IMAGE_REPO}:${IMAGE_TAG}"
	docker push "${IMAGE_REPO}:latest"
	docker push "${IMAGE_REPO}:${IMAGE_TAG}"

.PHONY: gen-ci
gen-ci: ## CircleCI用 configをgenerate
	$(eval IMAGE_REPO := ghcr.io/sunakan/circleci-rails-ci)
	@docker run --rm -it --mount type=bind,source=${PWD},target=/home/ci/ci-tools/ ${IMAGE_REPO}:latest bin/generate-config.sh

.PHONY: validate-ci-config
validate-ci-config: ## CircleCI用 configをvalidation
	$(eval IMAGE_REPO := ghcr.io/sunakan/circleci-rails-ci)
	@docker run --rm -it --mount type=bind,source=${PWD},target=/home/ci/ci-tools/ ${IMAGE_REPO}:latest bin/validate-ci-config.sh

################################################################################
# Utility-Command help
################################################################################
.DEFAULT_GOAL := help

################################################################################
# マクロ
################################################################################
# Makefileの中身を抽出してhelpとして1行で出す
# $(1): Makefile名
# 使い方例: $(call help,{included-makefile})
define help
  grep -E '^[\.a-zA-Z0-9_-]+:.*?## .*$$' $(1) \
  | grep --invert-match "## non-help" \
  | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'
endef

################################################################################
# タスク
################################################################################
.PHONY: help
help: ## Make タスク一覧
	@echo '######################################################################'
	@echo '# Makeタスク一覧'
	@echo '# $$ make XXX'
	@echo '# or'
	@echo '# $$ make XXX --dry-run'
	@echo '######################################################################'
	@echo $(MAKEFILE_LIST) \
	| tr ' ' '\n' \
	| xargs -I {included-makefile} $(call help,{included-makefile})
